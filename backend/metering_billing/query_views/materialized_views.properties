counter_count = CREATE MATERIALIZED VIEW %s (start_date date, end_date date) AS
SELECT time_bucket('1 day', time_created) as day,
       COUNT(*) as usage,
       COUNT(*) as total_usage
FROM public.metering_billing_event
WHERE time_created BETWEEN start_date AND end_date;
GROUP BY day
ORDER BY day DESC;

counter_sum = CREATE MATERIALIZED VIEW %s (start_date date, end_date date) AS
SELECT time_bucket('1 day', time_created) as day,
       SUM(properties -> %s ) as usage,
       SUM(properties -> %s ) as total_usage
FROM public.metering_billing_event
WHERE time_created BETWEEN start_date AND end_date;
GROUP BY day
ORDER BY day DESC;

counter_unique = CREATE MATERIALIZED VIEW %s (start_date date, end_date date) AS
SELECT time_bucket('1 day', time_created) as day,
       COUNT(DISTINCT properties -> %s ) as usage,
       COUNT(DISTINCT properties -> %s ) as total_usage
FROM public.metering_billing_event
WHERE time_created BETWEEN start_date AND end_date;
GROUP BY day
ORDER BY day DESC;

counter_max = CREATE MATERIALIZED VIEW %s (start_date date, end_date date) AS
SELECT time_bucket('1 day', time_created) as day,
       MAX(properties -> %s ) as usage,
       MAX(properties -> %s ) as total_usage
FROM public.metering_billing_event
WHERE time_created BETWEEN start_date AND end_date;
GROUP BY day
ORDER BY day DESC;

continuous_max = CREATE MATERIALIZED VIEW %s (start_date date, end_date date) AS
SELECT time_bucket('1 second', time_created) as second,
       MAX(properties -> %s) as max_value
FROM public.metering_billing_event
JOIN LATERAL (
    SELECT MAX(properties -> %s) as max_value
    FROM public.metering_billing_event
    WHERE time_bucket(%s, time_created) = time_bucket(%s, time_created) - interval '1 second'
) last_bucket ON true
WHERE time_created BETWEEN start_date AND end_date;
GROUP BY day
ORDER BY day DESC;


